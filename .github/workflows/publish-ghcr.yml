name: Build and Publish to GHCR

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Build SQLite database
        env:
          MARKDOWN_GITHUB_TOKEN: ${{ secrets.MARKDOWN_GITHUB_TOKEN }}
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python build_database.py
          test -f tils.db

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha
            type=ref,event=branch
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          project_id: ${{ env.PROJECT_ID }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2

        - name: Sanity check auth
        run: |
          gcloud config list
          gcloud auth list

      - name: Clear any impersonation & select SA
        run: |
          # Clear any prior impersonation config that might be set in this runner
          gcloud config unset auth/impersonate_service_account || true
          # Point gcloud at the service account that the auth action just minted
          SA_EMAIL=$(jq -r '.client_email' "$GOOGLE_GHA_CREDS_PATH")
          echo "Using service account: $SA_EMAIL"
          gcloud config set account "$SA_EMAIL"

      - name: Verify access
        run: |
          gcloud run services list --region=us-central1 || (echo "Auth still not right" && exit 1)

      - name: Deploy to Cloud Run
        if: github.ref == 'refs/heads/main'
        run: |
          gcloud run deploy today-i-learned \
          --image=us-central1-docker.pkg.dev/sqlite-deployments/today-i-learned/jnellis3/today-i-learned:sha-335729a \
          --min-instances=0 \
          --max-instances=3 \
          --no-cpu-boost \
          --region=us-central1 \
          --project=sqlite-deployments \
           && gcloud run services update-traffic today-i-learned --to-latest
